// <auto-generated />
using System;
using HR.entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HR.entity.Migrations
{
    [DbContext(typeof(AgriBookContext))]
    [Migration("20221008123228_test4")]
    partial class test4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HR.entity.Models.AcademicQualification", b =>
                {
                    b.Property<int>("PkacademicQualificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKAcademicQualificationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcademicQualificationType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PkacademicQualificationId");

                    b.ToTable("AcademicQualification");
                });

            modelBuilder.Entity("HR.entity.Models.AdministrativeDepartment", b =>
                {
                    b.Property<int>("PkadministrativeDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKAdministrativeDepartmentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdministrativeDepartmentNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AdministrativeDepartmentNameAR");

                    b.Property<string>("AdministrativeDepartmentNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AdministrativeDepartmentNameEN");

                    b.Property<int>("FkdirectorateId")
                        .HasColumnType("int")
                        .HasColumnName("FKDirectorateID");

                    b.HasKey("PkadministrativeDepartmentId");

                    b.HasIndex("FkdirectorateId");

                    b.ToTable("AdministrativeDepartment");
                });

            modelBuilder.Entity("HR.entity.Models.AdministrativeDepartmentJob", b =>
                {
                    b.Property<int>("PkadministrativeDepartmentJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKAdministrativeDepartmentJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministrativeDepartmentJobCount")
                        .HasColumnType("int");

                    b.Property<int?>("FkadministrativeDepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("FKAdministrativeDepartmentID");

                    b.Property<int?>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.HasKey("PkadministrativeDepartmentJobId");

                    b.HasIndex("FkadministrativeDepartmentId");

                    b.HasIndex("FkjobId");

                    b.ToTable("AdministrativeDepartmentJob");
                });

            modelBuilder.Entity("HR.entity.Models.Authority", b =>
                {
                    b.Property<int>("PkauthorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKAuthorityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorityNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AuthorityNameAR");

                    b.Property<string>("AuthorityNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AuthorityNameEN");

                    b.Property<int>("FkdirectorateId")
                        .HasColumnType("int")
                        .HasColumnName("FKDirectorateID");

                    b.HasKey("PkauthorityId");

                    b.HasIndex("FkdirectorateId");

                    b.ToTable("Authority");
                });

            modelBuilder.Entity("HR.entity.Models.AuthorityJob", b =>
                {
                    b.Property<int>("PkauthorityJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKAuthorityJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorityJobCount")
                        .HasColumnType("int");

                    b.Property<int>("FkauthotityId")
                        .HasColumnType("int")
                        .HasColumnName("FKAuthotityID");

                    b.Property<int>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.HasKey("PkauthorityJobId");

                    b.HasIndex("FkauthotityId");

                    b.HasIndex("FkjobId");

                    b.ToTable("AuthorityJob");
                });

            modelBuilder.Entity("HR.entity.Models.CareerProgression", b =>
                {
                    b.Property<int>("PkcareerProgressionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKCareerProgressionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CareerProgressionDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("CareerProgressionRaise")
                        .HasColumnType("money");

                    b.Property<int?>("FkemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmployeeID");

                    b.HasKey("PkcareerProgressionId");

                    b.HasIndex("FkemployeeId");

                    b.ToTable("CareerProgression");
                });

            modelBuilder.Entity("HR.entity.Models.Category", b =>
                {
                    b.Property<int>("PkcategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKCategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<int?>("CategoryNumber")
                        .HasColumnType("int");

                    b.HasKey("PkcategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("HR.entity.Models.Center", b =>
                {
                    b.Property<int>("PkcenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CenterNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CenterNameAR");

                    b.Property<string>("CenterNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CenterNameEN");

                    b.Property<int>("FksectionId")
                        .HasColumnType("int")
                        .HasColumnName("FKSectionID");

                    b.HasKey("PkcenterId");

                    b.HasIndex("FksectionId");

                    b.ToTable("Center");
                });

            modelBuilder.Entity("HR.entity.Models.CenterJob", b =>
                {
                    b.Property<int>("PkcenterJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKCenterJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CenterJobCount")
                        .HasColumnType("int");

                    b.Property<int>("FkcenterId")
                        .HasColumnType("int")
                        .HasColumnName("FKCenterID");

                    b.Property<int>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.HasKey("PkcenterJobId");

                    b.HasIndex("FkcenterId");

                    b.HasIndex("FkjobId");

                    b.ToTable("CenterJob");
                });

            modelBuilder.Entity("HR.entity.Models.ContractType", b =>
                {
                    b.Property<int>("PkcontractType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKContractType")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractTypeName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("PkcontractType");

                    b.ToTable("ContractType");
                });

            modelBuilder.Entity("HR.entity.Models.DecreeType", b =>
                {
                    b.Property<int>("PkdecreeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKDecreeTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DecreeTypeName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("PkdecreeTypeId");

                    b.ToTable("DecreeType");
                });

            modelBuilder.Entity("HR.entity.Models.Department", b =>
                {
                    b.Property<int>("PkdepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKDepartmentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DepartmentNameAR");

                    b.Property<string>("DepartmentNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DepartmentNameEN");

                    b.Property<int>("FkauthotiryId")
                        .HasColumnType("int")
                        .HasColumnName("FKAuthotiryID");

                    b.HasKey("PkdepartmentId");

                    b.HasIndex("FkauthotiryId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("HR.entity.Models.DepartmentJob", b =>
                {
                    b.Property<int>("PkdepartmentJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKDepartmentJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentJobCount")
                        .HasColumnType("int");

                    b.Property<int>("FkdepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("FKDepartmentID");

                    b.Property<int>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.HasKey("PkdepartmentJobId");

                    b.HasIndex("FkdepartmentId");

                    b.HasIndex("FkjobId");

                    b.ToTable("DepartmentJob");
                });

            modelBuilder.Entity("HR.entity.Models.Directorate", b =>
                {
                    b.Property<int>("PkdirectorateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKDirectorateID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DirectorateNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DirectorateNameAR");

                    b.Property<string>("DirectorateNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DirectorateNameEN");

                    b.HasKey("PkdirectorateId");

                    b.ToTable("Directorate");
                });

            modelBuilder.Entity("HR.entity.Models.DirectorateJob", b =>
                {
                    b.Property<int>("PkdirectorateJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKDirectorateJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DirectorateJobCount")
                        .HasColumnType("int");

                    b.Property<int>("FkdirectorateId")
                        .HasColumnType("int")
                        .HasColumnName("FKDirectorateID");

                    b.Property<int>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.HasKey("PkdirectorateJobId");

                    b.HasIndex("FkdirectorateId");

                    b.HasIndex("FkjobId");

                    b.ToTable("DirectorateJob");
                });

            modelBuilder.Entity("HR.entity.Models.Employee", b =>
                {
                    b.Property<int>("PkemployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKEmployeeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeAutomatedNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EmployeeDateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeFinancialNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<string>("EmployeeFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeImageUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EmployeeImageURL");

                    b.Property<string>("EmployeeLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeMiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeePhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<int?>("EmployeeTaxNumber")
                        .HasColumnType("int");

                    b.Property<int?>("FkacademicQualificationId")
                        .HasColumnType("int")
                        .HasColumnName("FKAcademicQualificationID");

                    b.Property<int?>("FkmaritalStatusId")
                        .HasColumnType("int")
                        .HasColumnName("FKMaritalStatusID");

                    b.HasKey("PkemployeeId");

                    b.HasIndex("FkacademicQualificationId");

                    b.HasIndex("FkmaritalStatusId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("HR.entity.Models.EmployeeLeaveApplication", b =>
                {
                    b.Property<int>("PkemployeeLeaveApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKEmployeeLeaveApplicationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("EmployeeLeaveApplicationApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("EmployeeLeaveApplicationDaysCount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("(datediff(day,[EmployeeLeaveApplicationToDate],[EmployeeLeaveApplicationFromDate]))", false);

                    b.Property<DateTime?>("EmployeeLeaveApplicationFromDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EmployeeLeaveApplicationToDate")
                        .HasColumnType("datetime");

                    b.Property<int>("FkemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmployeeID");

                    b.Property<int>("FkleaveTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FKLeaveTypeID");

                    b.HasKey("PkemployeeLeaveApplicationId");

                    b.HasIndex("FkemployeeId");

                    b.HasIndex("FkleaveTypeId");

                    b.ToTable("EmployeeLeaveApplication");
                });

            modelBuilder.Entity("HR.entity.Models.EmployeeLeaveBalance", b =>
                {
                    b.Property<int>("PkemployeeLeaveBalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKEmployeeLeaveBalanceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeLeaveLongTermTakenDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeLeaveSickTakenDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeLeaveUnpaidTakenDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeLeaveYearlyTakenDaysCount")
                        .HasColumnType("int");

                    b.Property<int>("FkemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmployeeID");

                    b.HasKey("PkemployeeLeaveBalanceId");

                    b.ToTable("EmployeeLeaveBalance");
                });

            modelBuilder.Entity("HR.entity.Models.EmployementDetail", b =>
                {
                    b.Property<int>("PkemployementDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKEmployementDetailsID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EmployementDecreeDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EmployementRetirementDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EmployementStartWorkingDate")
                        .HasColumnType("date");

                    b.Property<int?>("FkcategoryId")
                        .HasColumnType("int")
                        .HasColumnName("FKCategoryID");

                    b.Property<int?>("FkcontractType")
                        .HasColumnType("int")
                        .HasColumnName("FKContractType");

                    b.Property<int?>("FkdecreeType")
                        .HasColumnType("int")
                        .HasColumnName("FKDecreeType");

                    b.Property<int?>("FkemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmployeeID");

                    b.Property<int?>("FkemploymentStatusId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmploymentStatusID");

                    b.Property<int?>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.HasKey("PkemployementDetailsId");

                    b.HasIndex("FkcategoryId");

                    b.HasIndex("FkcontractType");

                    b.HasIndex("FkdecreeType");

                    b.HasIndex("FkemployeeId");

                    b.HasIndex("FkemploymentStatusId");

                    b.HasIndex("FkjobId");

                    b.ToTable("EmployementDetails");
                });

            modelBuilder.Entity("HR.entity.Models.EmployementStatus", b =>
                {
                    b.Property<int>("PkemploymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKEmploymentStatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmploymentStatusName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("PkemploymentStatusId");

                    b.ToTable("EmployementStatus");
                });

            modelBuilder.Entity("HR.entity.Models.Extension", b =>
                {
                    b.Property<int>("PkextensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKExtensionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExtensionNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ExtensionNameAR");

                    b.Property<string>("ExtensionNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ExtensionNameEN");

                    b.HasKey("PkextensionId")
                        .HasName("PK_ExtensionService");

                    b.ToTable("Extension");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionCenter", b =>
                {
                    b.Property<int>("PkextensionCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKExtensionCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExtensionCenterNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ExtensionCenterNameAR");

                    b.Property<string>("ExtensionCenterNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ExtensionCenterNameEN");

                    b.Property<int?>("FkextensionId")
                        .HasColumnType("int")
                        .HasColumnName("FKExtensionID");

                    b.HasKey("PkextensionCenterId");

                    b.HasIndex("FkextensionId");

                    b.ToTable("ExtensionCenter");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionCenterJob", b =>
                {
                    b.Property<int>("PkextensionCenterJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKExtensionCenterJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExtensionCenterJobCount")
                        .HasColumnType("int");

                    b.Property<int?>("FkextensionCenterId")
                        .HasColumnType("int")
                        .HasColumnName("FKExtensionCenterID");

                    b.Property<int?>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.HasKey("PkextensionCenterJobId");

                    b.HasIndex("FkextensionCenterId");

                    b.HasIndex("FkjobId");

                    b.ToTable("ExtensionCenterJob");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionSection", b =>
                {
                    b.Property<int>("PkextensionSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKExtensionSectionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExtensionSectionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PkextensionSectionId");

                    b.ToTable("ExtensionSection");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionSectionDetail", b =>
                {
                    b.Property<int>("PkextensionSectionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKExtensionSectionDetailsID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FkextensionId")
                        .HasColumnType("int")
                        .HasColumnName("FKExtensionID");

                    b.Property<int?>("FkextensionSectionId")
                        .HasColumnType("int")
                        .HasColumnName("FKExtensionSectionID");

                    b.HasKey("PkextensionSectionDetailsId");

                    b.HasIndex("FkextensionId");

                    b.HasIndex("FkextensionSectionId");

                    b.ToTable("ExtensionSectionDetails");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionSectionJob", b =>
                {
                    b.Property<int>("PkextensionSectionJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKExtensionSectionJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExtensionSectionJobCount")
                        .HasColumnType("int");

                    b.Property<int?>("FkextensionSectionId")
                        .HasColumnType("int")
                        .HasColumnName("FKExtensionSectionID");

                    b.Property<int?>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.HasKey("PkextensionSectionJobId");

                    b.HasIndex("FkextensionSectionId");

                    b.HasIndex("FkjobId");

                    b.ToTable("ExtensionSectionJob");
                });

            modelBuilder.Entity("HR.entity.Models.FamilyDetail", b =>
                {
                    b.Property<int>("PkfamilyDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKFamilyDetailsID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FamilyDetailsDob")
                        .HasColumnType("date")
                        .HasColumnName("FamilyDetailsDOB");

                    b.Property<string>("FamilyDetailsFullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FamilyDetailsGender")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<int>("FkemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmployeeID");

                    b.Property<int>("FkrelativeTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FKRelativeTypeID");

                    b.HasKey("PkfamilyDetailsId");

                    b.HasIndex("FkemployeeId");

                    b.HasIndex("FkrelativeTypeId");

                    b.ToTable("FamilyDetails");
                });

            modelBuilder.Entity("HR.entity.Models.Job", b =>
                {
                    b.Property<int>("PkjobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkcategoryId")
                        .HasColumnType("int")
                        .HasColumnName("FKCategoryID");

                    b.Property<string>("JobName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PkjobId");

                    b.HasIndex("FkcategoryId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("HR.entity.Models.LeaveType", b =>
                {
                    b.Property<int>("PkleaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKLeaveTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LeaveTypeNameAr")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("LeaveTypeNameAR")
                        .IsFixedLength(true);

                    b.Property<string>("LeaveTypeNameEn")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("LeaveTypeNameEN")
                        .IsFixedLength(true);

                    b.HasKey("PkleaveTypeId");

                    b.ToTable("LeaveType");
                });

            modelBuilder.Entity("HR.entity.Models.LeaveTypeDay", b =>
                {
                    b.Property<int>("PkleaveTypeDaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKLeaveTypeDaysID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FkcontractTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FKContractTypeID");

                    b.Property<int?>("FkleaveTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FKLeaveTypeID");

                    b.Property<int?>("LeaveTypeDaysFamilyPermittedCount")
                        .HasColumnType("int");

                    b.Property<int?>("LeaveTypeDaysLongTermPermittedCount")
                        .HasColumnType("int");

                    b.Property<int?>("LeaveTypeDaysMotherhoodCount")
                        .HasColumnType("int");

                    b.Property<int?>("LeaveTypeDaysUnpaidPermittedCount")
                        .HasColumnType("int");

                    b.Property<int?>("LeaveTypeDaysYearlyPermittedCount")
                        .HasColumnType("int");

                    b.Property<int?>("LeaveTypeSickDaysPermittedCount")
                        .HasColumnType("int");

                    b.HasKey("PkleaveTypeDaysId");

                    b.HasIndex("FkcontractTypeId");

                    b.HasIndex("FkleaveTypeId");

                    b.ToTable("LeaveTypeDays");
                });

            modelBuilder.Entity("HR.entity.Models.MaritalStatus", b =>
                {
                    b.Property<int>("PkmaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKMaritalStatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaritalStatusType")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("PkmaritalStatusId");

                    b.ToTable("MaritalStatus");
                });

            modelBuilder.Entity("HR.entity.Models.RelativeType", b =>
                {
                    b.Property<int>("PkrelativeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKRelativeTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RelativeTypeName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("PkrelativeTypeId");

                    b.ToTable("RelativeType");
                });

            modelBuilder.Entity("HR.entity.Models.Section", b =>
                {
                    b.Property<int>("PksectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKSectionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkdepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("FKDepartmentID");

                    b.Property<string>("SectionNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SectionNameAR");

                    b.Property<string>("SectionNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SectionNameEN");

                    b.HasKey("PksectionId");

                    b.HasIndex("FkdepartmentId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("HR.entity.Models.SectionJob", b =>
                {
                    b.Property<int>("PksectionJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PKSectionJobID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkjobId")
                        .HasColumnType("int")
                        .HasColumnName("FKJobID");

                    b.Property<int>("FksectionId")
                        .HasColumnType("int")
                        .HasColumnName("FKSectionID");

                    b.Property<int>("SectionJobCount")
                        .HasColumnType("int");

                    b.HasKey("PksectionJobId");

                    b.HasIndex("FkjobId");

                    b.HasIndex("FksectionId");

                    b.ToTable("SectionJob");
                });

            modelBuilder.Entity("HR.entity.Models.AdministrativeDepartment", b =>
                {
                    b.HasOne("HR.entity.Models.Directorate", "Fkdirectorate")
                        .WithMany("AdministrativeDepartments")
                        .HasForeignKey("FkdirectorateId")
                        .HasConstraintName("FK_AdministrativeDepartment_Directorate")
                        .IsRequired();

                    b.Navigation("Fkdirectorate");
                });

            modelBuilder.Entity("HR.entity.Models.AdministrativeDepartmentJob", b =>
                {
                    b.HasOne("HR.entity.Models.AdministrativeDepartment", "FkadministrativeDepartment")
                        .WithMany("AdministrativeDepartmentJobs")
                        .HasForeignKey("FkadministrativeDepartmentId")
                        .HasConstraintName("FK_AdministrativeDepartmentJob_AdministrativeDepartment");

                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("AdministrativeDepartmentJobs")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_AdministrativeDepartmentJob_Job");

                    b.Navigation("FkadministrativeDepartment");

                    b.Navigation("Fkjob");
                });

            modelBuilder.Entity("HR.entity.Models.Authority", b =>
                {
                    b.HasOne("HR.entity.Models.Directorate", "Fkdirectorate")
                        .WithMany("Authorities")
                        .HasForeignKey("FkdirectorateId")
                        .HasConstraintName("FK_Authority_Directorate")
                        .IsRequired();

                    b.Navigation("Fkdirectorate");
                });

            modelBuilder.Entity("HR.entity.Models.AuthorityJob", b =>
                {
                    b.HasOne("HR.entity.Models.Authority", "Fkauthotity")
                        .WithMany("AuthorityJobs")
                        .HasForeignKey("FkauthotityId")
                        .HasConstraintName("FK_AuthorityJob_Authority")
                        .IsRequired();

                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("AuthorityJobs")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_AuthorityJob_Job")
                        .IsRequired();

                    b.Navigation("Fkauthotity");

                    b.Navigation("Fkjob");
                });

            modelBuilder.Entity("HR.entity.Models.CareerProgression", b =>
                {
                    b.HasOne("HR.entity.Models.Employee", "Fkemployee")
                        .WithMany("CareerProgressions")
                        .HasForeignKey("FkemployeeId")
                        .HasConstraintName("FK_CareerProgression_Employee");

                    b.Navigation("Fkemployee");
                });

            modelBuilder.Entity("HR.entity.Models.Center", b =>
                {
                    b.HasOne("HR.entity.Models.Section", "Fksection")
                        .WithMany("Centers")
                        .HasForeignKey("FksectionId")
                        .HasConstraintName("FK_Center_Section")
                        .IsRequired();

                    b.Navigation("Fksection");
                });

            modelBuilder.Entity("HR.entity.Models.CenterJob", b =>
                {
                    b.HasOne("HR.entity.Models.Center", "Fkcenter")
                        .WithMany("CenterJobs")
                        .HasForeignKey("FkcenterId")
                        .HasConstraintName("FK_CenterJob_Center")
                        .IsRequired();

                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("CenterJobs")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_CenterJob_Job")
                        .IsRequired();

                    b.Navigation("Fkcenter");

                    b.Navigation("Fkjob");
                });

            modelBuilder.Entity("HR.entity.Models.Department", b =>
                {
                    b.HasOne("HR.entity.Models.Authority", "Fkauthotiry")
                        .WithMany("Departments")
                        .HasForeignKey("FkauthotiryId")
                        .HasConstraintName("FK_Department_Authority")
                        .IsRequired();

                    b.Navigation("Fkauthotiry");
                });

            modelBuilder.Entity("HR.entity.Models.DepartmentJob", b =>
                {
                    b.HasOne("HR.entity.Models.Department", "Fkdepartment")
                        .WithMany("DepartmentJobs")
                        .HasForeignKey("FkdepartmentId")
                        .HasConstraintName("FK_DepartmentJob_Department")
                        .IsRequired();

                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("DepartmentJobs")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_DepartmentJob_Job")
                        .IsRequired();

                    b.Navigation("Fkdepartment");

                    b.Navigation("Fkjob");
                });

            modelBuilder.Entity("HR.entity.Models.DirectorateJob", b =>
                {
                    b.HasOne("HR.entity.Models.Directorate", "Fkdirectorate")
                        .WithMany("DirectorateJobs")
                        .HasForeignKey("FkdirectorateId")
                        .HasConstraintName("FK_DirectorateJob_Directorate")
                        .IsRequired();

                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("DirectorateJobs")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_DirectorateJob_Job")
                        .IsRequired();

                    b.Navigation("Fkdirectorate");

                    b.Navigation("Fkjob");
                });

            modelBuilder.Entity("HR.entity.Models.Employee", b =>
                {
                    b.HasOne("HR.entity.Models.AcademicQualification", "FkacademicQualification")
                        .WithMany("Employees")
                        .HasForeignKey("FkacademicQualificationId")
                        .HasConstraintName("FK_Employee_AcademicQualification");

                    b.HasOne("HR.entity.Models.MaritalStatus", "FkmaritalStatus")
                        .WithMany("Employees")
                        .HasForeignKey("FkmaritalStatusId")
                        .HasConstraintName("FK_Employee_MaritalStatus");

                    b.Navigation("FkacademicQualification");

                    b.Navigation("FkmaritalStatus");
                });

            modelBuilder.Entity("HR.entity.Models.EmployeeLeaveApplication", b =>
                {
                    b.HasOne("HR.entity.Models.Employee", "Fkemployee")
                        .WithMany("EmployeeLeaveApplications")
                        .HasForeignKey("FkemployeeId")
                        .HasConstraintName("FK_EmployeeLeaveApplication_Employee")
                        .IsRequired();

                    b.HasOne("HR.entity.Models.LeaveType", "FkleaveType")
                        .WithMany("EmployeeLeaveApplications")
                        .HasForeignKey("FkleaveTypeId")
                        .HasConstraintName("FK_EmployeeLeaveApplication_LeaveType")
                        .IsRequired();

                    b.Navigation("Fkemployee");

                    b.Navigation("FkleaveType");
                });

            modelBuilder.Entity("HR.entity.Models.EmployementDetail", b =>
                {
                    b.HasOne("HR.entity.Models.Category", "Fkcategory")
                        .WithMany("EmployementDetails")
                        .HasForeignKey("FkcategoryId")
                        .HasConstraintName("FK_EmployementDetails_Category");

                    b.HasOne("HR.entity.Models.ContractType", "FkcontractTypeNavigation")
                        .WithMany("EmployementDetails")
                        .HasForeignKey("FkcontractType")
                        .HasConstraintName("FK_EmployementDetails_ContractType");

                    b.HasOne("HR.entity.Models.DecreeType", "FkdecreeTypeNavigation")
                        .WithMany("EmployementDetails")
                        .HasForeignKey("FkdecreeType")
                        .HasConstraintName("FK_EmployementDetails_DecreeType");

                    b.HasOne("HR.entity.Models.Employee", "Fkemployee")
                        .WithMany("EmployementDetails")
                        .HasForeignKey("FkemployeeId")
                        .HasConstraintName("FK_EmployementDetails_Employee1");

                    b.HasOne("HR.entity.Models.EmployementStatus", "FkemploymentStatus")
                        .WithMany("EmployementDetails")
                        .HasForeignKey("FkemploymentStatusId")
                        .HasConstraintName("FK_EmployementDetails_EmployementStatus");

                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("EmployementDetails")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_EmployementDetails_Job");

                    b.Navigation("Fkcategory");

                    b.Navigation("FkcontractTypeNavigation");

                    b.Navigation("FkdecreeTypeNavigation");

                    b.Navigation("Fkemployee");

                    b.Navigation("FkemploymentStatus");

                    b.Navigation("Fkjob");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionCenter", b =>
                {
                    b.HasOne("HR.entity.Models.Extension", "Fkextension")
                        .WithMany("ExtensionCenters")
                        .HasForeignKey("FkextensionId")
                        .HasConstraintName("FK_ExtensionCenter_Extension");

                    b.Navigation("Fkextension");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionCenterJob", b =>
                {
                    b.HasOne("HR.entity.Models.ExtensionCenter", "FkextensionCenter")
                        .WithMany("ExtensionCenterJobs")
                        .HasForeignKey("FkextensionCenterId")
                        .HasConstraintName("FK_ExtensionCenterJob_ExtensionCenter");

                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("ExtensionCenterJobs")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_ExtensionCenterJob_Job");

                    b.Navigation("FkextensionCenter");

                    b.Navigation("Fkjob");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionSectionDetail", b =>
                {
                    b.HasOne("HR.entity.Models.Extension", "Fkextension")
                        .WithMany("ExtensionSectionDetails")
                        .HasForeignKey("FkextensionId")
                        .HasConstraintName("FK_ExtensionSectionDetails_Extension");

                    b.HasOne("HR.entity.Models.ExtensionSection", "FkextensionSection")
                        .WithMany("ExtensionSectionDetails")
                        .HasForeignKey("FkextensionSectionId")
                        .HasConstraintName("FK_ExtensionSectionDetails_ExtensionSection");

                    b.Navigation("Fkextension");

                    b.Navigation("FkextensionSection");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionSectionJob", b =>
                {
                    b.HasOne("HR.entity.Models.ExtensionSection", "FkextensionSection")
                        .WithMany("ExtensionSectionJobs")
                        .HasForeignKey("FkextensionSectionId")
                        .HasConstraintName("FK_ExtensionSectionJob_ExtensionSection");

                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("ExtensionSectionJobs")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_ExtensionSectionJob_Job");

                    b.Navigation("FkextensionSection");

                    b.Navigation("Fkjob");
                });

            modelBuilder.Entity("HR.entity.Models.FamilyDetail", b =>
                {
                    b.HasOne("HR.entity.Models.Employee", "Fkemployee")
                        .WithMany("FamilyDetails")
                        .HasForeignKey("FkemployeeId")
                        .HasConstraintName("FK_FamilyDetails_Employee")
                        .IsRequired();

                    b.HasOne("HR.entity.Models.RelativeType", "FkrelativeType")
                        .WithMany("FamilyDetails")
                        .HasForeignKey("FkrelativeTypeId")
                        .HasConstraintName("FK_FamilyDetails_RelativeType")
                        .IsRequired();

                    b.Navigation("Fkemployee");

                    b.Navigation("FkrelativeType");
                });

            modelBuilder.Entity("HR.entity.Models.Job", b =>
                {
                    b.HasOne("HR.entity.Models.Category", "Fkcategory")
                        .WithMany("Jobs")
                        .HasForeignKey("FkcategoryId")
                        .HasConstraintName("FK_Job_Category")
                        .IsRequired();

                    b.Navigation("Fkcategory");
                });

            modelBuilder.Entity("HR.entity.Models.LeaveTypeDay", b =>
                {
                    b.HasOne("HR.entity.Models.ContractType", "FkcontractType")
                        .WithMany("LeaveTypeDays")
                        .HasForeignKey("FkcontractTypeId")
                        .HasConstraintName("FK_LeaveTypeDays_ContractType");

                    b.HasOne("HR.entity.Models.LeaveType", "FkleaveType")
                        .WithMany("LeaveTypeDays")
                        .HasForeignKey("FkleaveTypeId")
                        .HasConstraintName("FK_LeaveTypeDays_LeaveType");

                    b.Navigation("FkcontractType");

                    b.Navigation("FkleaveType");
                });

            modelBuilder.Entity("HR.entity.Models.Section", b =>
                {
                    b.HasOne("HR.entity.Models.Department", "Fkdepartment")
                        .WithMany("Sections")
                        .HasForeignKey("FkdepartmentId")
                        .HasConstraintName("FK_Section_Department")
                        .IsRequired();

                    b.Navigation("Fkdepartment");
                });

            modelBuilder.Entity("HR.entity.Models.SectionJob", b =>
                {
                    b.HasOne("HR.entity.Models.Job", "Fkjob")
                        .WithMany("SectionJobs")
                        .HasForeignKey("FkjobId")
                        .HasConstraintName("FK_SectionJob_Job")
                        .IsRequired();

                    b.HasOne("HR.entity.Models.Section", "Fksection")
                        .WithMany("SectionJobs")
                        .HasForeignKey("FksectionId")
                        .HasConstraintName("FK_SectionJob_Section")
                        .IsRequired();

                    b.Navigation("Fkjob");

                    b.Navigation("Fksection");
                });

            modelBuilder.Entity("HR.entity.Models.AcademicQualification", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR.entity.Models.AdministrativeDepartment", b =>
                {
                    b.Navigation("AdministrativeDepartmentJobs");
                });

            modelBuilder.Entity("HR.entity.Models.Authority", b =>
                {
                    b.Navigation("AuthorityJobs");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("HR.entity.Models.Category", b =>
                {
                    b.Navigation("EmployementDetails");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("HR.entity.Models.Center", b =>
                {
                    b.Navigation("CenterJobs");
                });

            modelBuilder.Entity("HR.entity.Models.ContractType", b =>
                {
                    b.Navigation("EmployementDetails");

                    b.Navigation("LeaveTypeDays");
                });

            modelBuilder.Entity("HR.entity.Models.DecreeType", b =>
                {
                    b.Navigation("EmployementDetails");
                });

            modelBuilder.Entity("HR.entity.Models.Department", b =>
                {
                    b.Navigation("DepartmentJobs");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("HR.entity.Models.Directorate", b =>
                {
                    b.Navigation("AdministrativeDepartments");

                    b.Navigation("Authorities");

                    b.Navigation("DirectorateJobs");
                });

            modelBuilder.Entity("HR.entity.Models.Employee", b =>
                {
                    b.Navigation("CareerProgressions");

                    b.Navigation("EmployeeLeaveApplications");

                    b.Navigation("EmployementDetails");

                    b.Navigation("FamilyDetails");
                });

            modelBuilder.Entity("HR.entity.Models.EmployementStatus", b =>
                {
                    b.Navigation("EmployementDetails");
                });

            modelBuilder.Entity("HR.entity.Models.Extension", b =>
                {
                    b.Navigation("ExtensionCenters");

                    b.Navigation("ExtensionSectionDetails");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionCenter", b =>
                {
                    b.Navigation("ExtensionCenterJobs");
                });

            modelBuilder.Entity("HR.entity.Models.ExtensionSection", b =>
                {
                    b.Navigation("ExtensionSectionDetails");

                    b.Navigation("ExtensionSectionJobs");
                });

            modelBuilder.Entity("HR.entity.Models.Job", b =>
                {
                    b.Navigation("AdministrativeDepartmentJobs");

                    b.Navigation("AuthorityJobs");

                    b.Navigation("CenterJobs");

                    b.Navigation("DepartmentJobs");

                    b.Navigation("DirectorateJobs");

                    b.Navigation("EmployementDetails");

                    b.Navigation("ExtensionCenterJobs");

                    b.Navigation("ExtensionSectionJobs");

                    b.Navigation("SectionJobs");
                });

            modelBuilder.Entity("HR.entity.Models.LeaveType", b =>
                {
                    b.Navigation("EmployeeLeaveApplications");

                    b.Navigation("LeaveTypeDays");
                });

            modelBuilder.Entity("HR.entity.Models.MaritalStatus", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR.entity.Models.RelativeType", b =>
                {
                    b.Navigation("FamilyDetails");
                });

            modelBuilder.Entity("HR.entity.Models.Section", b =>
                {
                    b.Navigation("Centers");

                    b.Navigation("SectionJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
